---
version: '3.6'

networks:
  traefik_proxy:
    driver: bridge

volumes:

  flame_data:

  traefik_letsencrypt:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/store/docker_nfs/traefik/letsencrypt/"

  homepage_config:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/homepage/"

services:
  traefik:
    ## Reference material ##
    # https://github.com/ironicbadger/infra/blob/master/dev/traefik/docker-compose.yaml
    # https://blog.ktz.me/traefik-v2-and-unifi-controller-in-docker/
    # https://community.traefik.io/t/healthcheck-through-traefik/10000/6
    # https://doc.traefik.io/traefik/routing/services/#health-check
    # https://gist.github.com/jeroenhendricksen/7dfe273277bbbd1c2ea2cb7c647b24fa
    image: "traefik:latest"
    container_name: "traefik"
    networks:
      - traefik_proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:9443
      - --entrypoints.haweb.address=:8123
      - --log.level=DEBUG
      - --accesslog=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=route53
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    environment:
      - EMAIL=${LETSENCRYPT_EMAIL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
      - DOMAIN=${DOMAIN}
      - CERT_RESOLVER=${CERT_RESOLVER}
    ports:
      - "80:80"     # Web entrypoint
      - "9443:9443" # Websecure entrypoint
      - "8090:8080" # Traefik Dashboard
      - "8123:8123" # For Home-Assistant
      - "8300:8300" # Emulated Hue for Home-Assistant and Alexa
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=Host(`home.viewpoint.house`)
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.tls=true
      - traefik.http.routers.homepage.tls.certresolver=letsencrypt
      - traefik.http.routers.homepage.tls.domains[0].main=home.viewpoint.house
      - traefik.http.services.homepage.loadbalancer.server.port=3000
      - traefik.http.services.homepage.loadbalancer.healthcheck.path=/
      - traefik.http.services.homepage.loadbalancer.healthcheck.port=3000
      - com.centurylinklabs.watchtower.enable=true
    volumes:
      - homepage_config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations

  flame:
    image: pawelmalak/flame:latest
    container_name: flame
    restart: unless-stopped
    networks:
      - traefik_proxy
    volumes:
      - flame_data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.flame.rule=Host(`flame.viewpoint.house`)
      - traefik.http.routers.flame.entrypoints=websecure
      - traefik.http.routers.flame.tls=true
      - traefik.http.routers.flame.tls.certresolver=letsencrypt
      - traefik.http.routers.flame.tls.domains[0].main=flame.viewpoint.house
      - com.centurylinklabs.watchtower.enable=true
