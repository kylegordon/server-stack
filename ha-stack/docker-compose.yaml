version: '3.6'

volumes:
  influxdb2:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/influxdb/"

  uptime-kuma:
  netdataconfig:
  netdatalib:
  netdatacache:
  scrutiny_config:

  warrior_data:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/archiveteamWarrior/data/"
  warrior_config:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/archiveteamWarrior/config/"

  pihole_etc:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/pihole/etc/"
  pihole_dnsmasq:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/pihole/dnsmasq/"

  whisper:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/whisper/"
  piper:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/piper"

networks:
    traefik_proxy:
      external: true
      name: frontend_traefik_proxy

    homeautomation:
      name: homeautomation

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
     - "172.24.32.13:53:53/tcp"
     - "172.24.32.13:53:53/udp"
     # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
    #  - "84:80/tcp"
    networks:
      - traefik_proxy
    environment:
      - TZ='Europe/London'
      - DNSMASQ_LISTENING='all'
      # - WEBPASSWORD: 'set a secure password here or it will be random'
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
    # Volumes store your data between container upgrades
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host(`pihole.viewpoint.house`)
      - traefik.http.routers.pihole.entrypoints=web
      - traefik.http.services.pihole.loadbalancer.server.port=80
      - traefik.http.services.pihole.loadbalancer.healthcheck.path=/admin/login.php
      - traefik.http.services.pihole.loadbalancer.healthcheck.port=80
    volumes:
      - 'pihole_etc:/etc/pihole'
      - 'pihole_dnsmasq:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - CAP_NET_BIND_SERVICE
    #   - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  ldap:
    image: minkwe/389ds:latest
    hostname: ldap.viewpoint.house
    container_name: ldap
    volumes:
      - /docker/ldap/data:/var/lib/dirsrv:Z
      - /docker/ldap/config:/etc/dirsrv:Z
      - /docker/ldap/logs:/var/log/dirsrv:Z
      - /docker/ldap/certs:/certs:Z
    environment:
      - DIR_SUFFIX=${LDAP_DIR_SUFFIX}
      - DIR_ADMIN_USERNAME=${LDAP_DIR_ADMIN_USERNAME}
      - DIR_MANAGER_PASSWORD={LDAP_DIR_MANAGER_PASSWORD}
      - DIR_ADMIN_UID{LDAP_DIR_ADMIN_UID}
      - DIR_USERS_HOME=${LDAP_DIR_USERS_HOME}
    ports:
      # Move this to Traefik TCP
      - 389:389
      - 636:636
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true

  home-assistant:
    image: ghcr.io/home-assistant/home-assistant:latest
    container_name: home-assistant
    depends_on:
      - zigbee2mqtt
      - eclipse-mosquitto
    restart: unless-stopped
    labels:
      # https://techoverflow.net/2022/03/27/how-to-fix-traefik-could-not-define-the-service-name-for-the-router-too-many-services/
      - traefik.enable=true
      - traefik.http.routers.ha.rule=Host(`viewpoint.house`) || Host(`172.24.32.13`)
      - traefik.http.routers.ha.entrypoints=haweb
      - traefik.http.routers.ha.service=ha
      - traefik.http.services.ha.loadbalancer.server.port=8123
      - traefik.http.services.ha.loadbalancer.healthcheck.path=/
      - traefik.http.services.ha.loadbalancer.healthcheck.port=8123
      - traefik.http.routers.ha_hue.rule=Host(`viewpoint.house`) || Host(`172.24.32.13`)
      - traefik.http.routers.ha_hue.entrypoints=web
      - traefik.http.routers.ha_hue.service=ha_hue
      - traefik.http.services.ha_hue.loadbalancer.server.port=80
      - traefik.http.services.ha_hue.loadbalancer.healthcheck.path=/api/
      - traefik.http.services.ha_hue.loadbalancer.healthcheck.port=80
      - flame.type=application # "app" works too
      - flame.name=Home Assistant
      - flame.url=http://viewpoint.house:8123
      - flame.icon=home-assistant # Optional, default is "docker"
      - homepage.group=Home Automation
      - homepage.name=Home Assistant
      - homepage.icon=mdi-home-assistant
      - homepage.href=http://viewpoint.house:8123
      - homepage.description=Home Assistant
      - com.centurylinklabs.watchtower.lifecycle.pre-check=exit 0
      - com.centerylinklabs.watchtower.enable=false
      # - flame.icon=custom to make changes in app. ie: custom icon upload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - traefik_proxy
    environment:
      - PUID=200
      - PGID=200
    devices:
      # - /dev/ttyUSB0:/dev/ttyUSB0
      # Before udev fuckup - /dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WRPEJT-if00-port0:/dev/ttyUSB0
      - /dev/serial/by-id/pci-RFXCOM_RFXtrx433_A1WRPEJT-if00-port0:/dev/ttyUSB0
      # - /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0:/dev/zwave
      # - /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DO00KFKX-if00-port0:/dev/conbee1
    volumes:
      - /docker/home-assistant/config:/config
      - /media/store/cctv/frigate:/media/frigate_cctv
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  whisper:
    container_name: whisper
    #  command: --model medium --language nl
    command: --model medium-int8 --language en-gb
    image: rhasspy/wyoming-whisper:latest
    # network_mode: host
    volumes:
      - whisper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    ports:
      - 10300:10300
    # healthcheck:
      # test: ["CMD", "curl", "-f", "http://viewpoint.house:10300"]
      # echo '{"type":"describe"}'|nc -w 1 localhost 10300
    labels:
      - com.centurylinklabs.watchtower.enable=true

  piper:
    container_name: piper
    image: rhasspy/wyoming-piper:latest
    #  command: --voice nl-nathalie-x-low
    command: --voice en-gb-southern_english_female-low
    # network_mode: host
    volumes:
      - piper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    ports:
      - 10200:10200
    labels:
      - com.centurylinklabs.watchtower.enable=true

  mdns-repeater:
    image: monstrenyatko/mdns-repeater:latest
    container_name: mdns-repeater
    restart: unless-stopped
    # The result of ifconfig | grep -i `docker network ls | grep -i traefik | awk '{print $1}'` | awk '{print $1}'
    command: mdns-repeater-app -f eth0 br-640e7c6c5f4b
    network_mode: "host"

  esphome:
    image: ghcr.io/esphome/esphome:latest
    container_name: esphome
    depends_on:
      - mdns-repeater
    networks:
      - traefik_proxy
    # network_mode: host
    # https://doc.traefik.io/traefik/providers/docker/#host-networking
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.esphome.rule=Host(`esphome.viewpoint.house`)
      - traefik.http.routers.esphome.entrypoints=web
      - traefik.http.services.esphome.loadbalancer.server.port=6052
      - traefik.http.services.esphome.loadbalancer.healthcheck.path=/
      - traefik.http.services.esphome.loadbalancer.healthcheck.port=6052
      - flame.type=application # "app" works too
      - flame.name=ESPHome
      - flame.url=http://esphome.viewpoint.house
      - flame.icon=chip
      - homepage.group=Home Automation
      - homepage.name=ESPHome
      - homepage.icon=mdi-chip
      - homepage.href=http://esphome.viewpoint.house
      - homepage.description=IOT Firmware Management
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6052"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /docker/home-assistant/config/esphome:/config
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.z2m.rule=Host(`z2m.viewpoint.house`)
      - traefik.http.routers.z2m.entrypoints=web
      - traefik.http.services.z2m.loadbalancer.server.port=8080
      - traefik.http.services.z2m.loadbalancer.healthcheck.path=/
      - traefik.http.services.z2m.loadbalancer.healthcheck.port=8080
      - flame.type=application # "app" works too
      - flame.group=Home Automation
      - flame.name=zigbee2mqtt
      - flame.url=http://z2m.viewpoint.house
      - flame.icon=lightbulb-outline
      - homepage.group=Home Automation
      - homepage.name=Zigbee2MQTT
      - homepage.icon=mdi-zigbee
      - homepage.href=http://z2m.viewpoint.house
      - homepage.description=Zigbee Management
      - com.centurylinklabs.watchtower.enable=true
    volumes:
      - /docker/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/London
      - DEBUG=zigbee-herdsman*
    # devices:
      # Make sure this matched your adapter location
      # - /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DO00KFKX-if00-port0:/dev/ttyACM0

  # facebox:
  #   image: machinebox/facebox_noavx
  #   container_name: facebox
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   labels:
  #     - flame.type=application # "app" works too
  #     - flame.name=Facebox
  #     - flame.url=http://viewpoint.house:8080
  #   environment:
  #     - MB_KEY=${MB_KEY}
  #     - MB_FACEBOX_DISABLE_RECOGNITION=false
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: "udp://172.24.32.13:12201"
  #       tag: "{{.Name}}"

  eclipse-mosquitto:
    image: eclipse-mosquitto:latest
    container_name: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 9001:9001
    labels:
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik_proxy
    volumes:
        - /docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
        - /docker/mosquitto/data:/mosquitto/data
        - /docker/mosquitto/log:/mosquitto/log
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  nodered:
    restart: unless-stopped
    image: nodered/node-red:latest
    container_name: node-red
    labels:
      - traefik.enable=true
      - traefik.http.routers.nodered.rule=Host(`nodered.viewpoint.house`)
      - traefik.http.routers.nodered.entrypoints=web
      - traefik.http.services.nodered.loadbalancer.server.port=1880
      - traefik.http.services.nodered.loadbalancer.healthcheck.path=/
      - traefik.http.services.nodered.loadbalancer.healthcheck.port=1880
      - flame.type=application # "app" works too
      - flame.name=Node-Red
      - flame.url=http://nodered.viewpoint.house
      - flame.group=Home Automation
      - homepage.group=Home Automation
      - homepage.name=Node Red
      - homepage.href=http://nodered.viewpoint.house
      - homepage.description=MQTT Management
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - traefik_proxy
    environment:
      TZ: Europe/London
    volumes:
      - /docker/node-red/data:/data
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: unless-stopped
    networks:
      - traefik_proxy
    depends_on:
      - eclipse-mosquitto
    image: ghcr.io/blakeblackshear/frigate:stable
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/dri/card0 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/frigate/config/config.yml:/config/config.yml:ro
      - /media/store/cctv/frigate:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      # - "4999:5000"
      - "1935:1935" # RTMP feeds - move to Traefik TCP
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://localhost:5000/"]
      interval: 30s
      timeout: 1s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.frigate.rule=Host(`cctv.viewpoint.house`)
      - traefik.http.routers.frigate.entrypoints=web
      - traefik.http.services.frigate.loadbalancer.server.port=5000
      - traefik.http.services.frigate.loadbalancer.healthcheck.path=/
      - traefik.http.services.frigate.loadbalancer.healthcheck.port=5000
      - flame.type=application # "app" works too
      - flame.name=Frigate
      - flame.url=http://cctv.viewpoint.house
      - flame.icon=cctv
      - homepage.group=Home Automation
      - homepage.icon=mdi-cctv
      - homepage.name=Frigate
      - homepage.href=http://cctv.viewpoint.house
      - homepage.description=CCTV
      - com.centurylinklabs.watchtower.enable=true
    #logging:
    #  driver: gelf
    #  options:
    #    gelf-address: "udp://172.24.32.13:12201"
    #    tag: "{{.Name}}"
    environment:
      - FRIGATE_RTSP_PASSWORD=${FRIGATE_RTSP_PASSWORD}

  double-take:
    container_name: double-take
    image: jakowenko/double-take:latest
    networks:
      - traefik_proxy
    restart: unless-stopped
    depends_on:
      - eclipse-mosquitto
      - frigate
    volumes:
      - /docker/double-take/storage:/.storage
    labels:
      - traefik.enable=true
      - traefik.http.routers.double-take.rule=Host(`double-take.viewpoint.house`)
      - traefik.http.routers.double-take.entrypoints=web
      - traefik.http.services.double-take.loadbalancer.server.port=3000
      - traefik.http.services.double-take.loadbalancer.healthcheck.path=/
      - traefik.http.services.double-take.loadbalancer.healthcheck.port=3000
      - flame.type=application # "app" works too
      - flame.name=Double Take
      - flame.url=http://double-take.viewpoint.house
      - homepage.group=Home Automation
      - homepage.icon=mdi-person
      - homepage.name=Double-Take
      - homepage.href=http://double-take.viewpoint.house
      - homepage.description=Facial Recognition Service
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://72.24.32.13:12201"
        tag: "{{.Name}}"

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_proxy
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://localhost:3001/"]
      interval: 30s
      timeout: 1s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime.rule=Host(`uptime.viewpoint.house`)
      - traefik.http.routers.uptime.entrypoints=web
      - traefik.http.services.uptime.loadbalancer.server.port=3001
      - traefik.http.services.uptime.loadbalancer.healthcheck.path=/
      - traefik.http.services.uptime.loadbalancer.healthcheck.port=3001
      # - traefik.port=3001
      - flame.type=application # "app" works too
      - flame.name=Uptime Kuma
      - flame.url=http://uptime.viewpoint.house
      - homepage.group=Monitoring
      - homepage.name=Uptime Kuma
      - homepage.href=http://uptime.viewpoint.house
      - homepage.description=Uptime Kuma
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://72.24.32.13:12201"
        tag: "{{.Name}}"

  # scrutiny:
  #   image: lscr.io/linuxserver/scrutiny:latest
  #   container_name: scrutiny
  #   cap_add:
  #     - SYS_RAWIO
  #     - SYS_ADMIN #optional
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - SCRUTINY_API_ENDPOINT=http://localhost:8080
  #     - SCRUTINY_WEB=true
  #     - SCRUTINY_COLLECTOR=true
  #   volumes:
  #     - scrutiny_config:/config
  #     - /run/udev:/run/udev:ro
  #   ports:
  #     - 8085:8080
  #   devices:
  #     - /dev/sda:/dev/sda
  #     - /dev/sdb:/dev/sdb
  #     - /dev/nvme1n1:/dev/nvme1n1
  #   restart: unless-stopped

  unifi-controller:
    image: lscr.io/linuxserver/unifi-controller:latest
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    networks:
      - traefik_proxy
    volumes:
      - /docker/unifi-controller:/config
    ports:
      - 8444:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      #- 1900:1900/udp #optional
      #- 8843:8843 #optional
      #- 8880:8880 #optional
      #- 6789:6789 #optional
      - 5514:5514/udp #optional
    # You can't define serverstransport in docker labels, so have to hack around it with
    # https://blog.ktz.me/traefik-v2-and-unifi-controller-in-docker/
    labels:
      - traefik.enable=true
      - traefik.http.routers.unifi-controller.rule=Host(`unifi.viewpoint.house`)
      - traefik.http.routers.unifi-controller.entrypoints=websecure
      - traefik.http.routers.unifi-controller.tls=true
      - traefik.http.routers.unifi-controller.tls.certresolver=letsencrypt
      - traefik.http.routers.unifi-controller.tls.domains[0].main=unifi.viewpoint.house
      - traefik.http.services.unifi-controller.loadbalancer.server.port=8443
      - traefik.http.services.unifi-controller.loadbalancer.server.scheme=https
      # - traefik.http.services.unifi-controller.loadbalancer.healthcheck.path=/
      # - traefik.http.services.unifi-controller.loadbalancer.healthcheck.port=8080
      - flame.type=application # "app" works too
      - flame.name=Unifi Controller
      - flame.url=https://viewpoint.house:8444
      - homepage.group=Management
      - homepage.name=Unifi Wifi
      - homepage.icon=mdi-wifi
      - homepage.href=https://unifi.viewpoint.house:8444
      - homepage.description=Unifi Wireless Management
    restart: unless-stopped

#  pialert:
#    container_name: pialert
#    network_mode: host
#    restart: always
#    volumes:
#      - /docker/pialert/config:/home/pi/pialert/config
#      - /docker/pialert/db/pialert.db:/home/pi/pialert/db/pialert.db
#      - /docker/pialert/logs:/home/pi/pialert/log
#    environment:
#      - TZ=Europe/London
#      - PORT=20211
#      - HOST_USER_ID=1000
#      - HOST_USER_GID=1000

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.viewpoint.house`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.routers.grafana.tls.domains[0].main=grafana.viewpoint.house
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - flame.type=application # "app" works too
      - flame.name=Grafana
      - flame.url=http://grafana.viewpoint.house
      - flame.icon=chart-line
      - homepage.group=Monitoring
      - homepage.name=Grafana
      - homepage.icon:mdi-chart-line
      - homepage.href=https://grafana.viewpoint.house
      - homepage.description=Grafana
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      # test: ["CMD", "wget", "--spider", "-tries=1", "--quiet", "http://172.24.32.13:3000/api/health"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      # http://docs.grafana.org/installation/configuration/#using-environment-variables
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=${GF_AUTH_ANONYMOUS_ENABLED}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=${GF_AUTH_ANONYMOUS_ORG_ROLE}
    volumes:
      - /docker/grafana:/var/lib/grafana/
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    volumes:
      # Mount for influxdb data directory - this is an LVM volume on homeauto
      # - /var/lib/influxdb:/var/lib/influxdb # unused
      # - influxdb2:/home/influxdb/.influxdbv2 # surplus
      - influxdb2:/var/lib/influxdb2
      # Mount for influxdb configuration
      - /docker/influxdb/config/:/etc/influxdb/
      - /docker/influxdb/types.db:/usr/share/collectd/types.db
    networks:
      - traefik_proxy
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      - "25826:25826"
    labels:
      - traefik.enable=true
      - traefik.http.routers.influxdb.rule=Host(`influxdb.viewpoint.house`)
      - traefik.http.routers.influxdb.entrypoints=web
      - traefik.http.services.influxdb.loadbalancer.server.port=8086
      - traefik.http.services.influxdb.loadbalancer.healthcheck.path=/health
      - traefik.http.services.influxdb.loadbalancer.healthcheck.port=8086
      - flame.type=application # "app" works too
      - flame.name=InfluxDB
      - flame.url=http://influxdb.viewpoint.house
      - homepage.group=Monitoring
      - homepage.name=InfluxDB
      - homepage.icon:mdi-chart-line
      - homepage.href=http://influxdb.viewpoint.house
      - homepage.description=InfluxDB
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    restart: unless-stopped
    networks:
      - traefik_proxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /docker/chronograf/data/:/var/lib/chronograf/
    labels:
      - traefik.enable=true
      - traefik.http.routers.chronograf.rule=Host(`chronograf.viewpoint.house`)
      - traefik.http.routers.chronograf.entrypoints=websecure
      - traefik.http.routers.chronograf.tls=true
      - traefik.http.routers.chronograf.tls.certresolver=letsencrypt
      - traefik.http.routers.chronograf.tls.domains[0].main=chronograf.viewpoint.house
      - traefik.http.services.chronograf.loadbalancer.server.port=8888
      - traefik.http.services.chronograf.loadbalancer.healthcheck.port=8888
      - traefik.http.services.chronograf.loadbalancer.healthcheck.path=/
      - flame.type=application # "app" works too
      - flame.name=Chronograf
      - flame.url=http://chronograf.viewpoint.house
      - homepage.group=Monitoring
      - homepage.name=Chronograf
      - homepage.icon:mdi-chart-line
      - homepage.href=https://chronograf.viewpoint.house
      - homepage.description=Chronograf
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegraf
  #   # links:
  #   #   - influxdb
  #   ports:
  #     - "8094:8094"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/run/utmp:/var/run/utmp:ro
  #     - /docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #   # environment:
  #   #   INPUT_DOCKER_ENABLED: "true"
  #   #   INPUT_LISTENER_ENABLED: "true"
  #   #   INPUT_CPU_ENABLED: "false"
  #   #   INPUT_DISK_ENABLED: "false"
  #   #   # DISK_IGNOREFS: '["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]'
  #   #   INPUT_DISKIO_ENABLED: "false"
  #   #   INPUT_KERNEL_ENABLED: "false"
  #   #   INPUT_MEM_ENABLED: "false"
  #   #   INPUT_PROCESS_ENABLED: "false"
  #   #   INPUT_SWAP_ENABLED: "true"
  #   #   INPUT_SYSTEM_ENABLED: "true"
  #   #   INPUT_NETSTAT_ENABLED: "true"
  #   #   INPUT_NET_ENABLED: "false"
  #   #   OUTPUT_INFLUXDB_ENABLED: "true"
  #   #   INFLUXDB_URL: "http://172.24.32.13:8086"
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: "udp://172.24.32.13:12201"
  #       tag: "{{.Name}}"

  Watchtower:
    image: v2tec/watchtower:latest
    command: "--label-enable"
    container_name: Watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS}
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_NOTIFICATION_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_NOTIFICATION_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD}
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped

  archiveTeamWarrior:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior
    hostname: archiveTeamWarrior
    networks:
      - traefik_proxy
    volumes:
      - warrior_data:/data/data
      - warrior_config:/home/warrior/projects/
    labels:
      - traefik.enable=true
      - traefik.http.routers.archiveteam.rule=Host(`archiveteam.viewpoint.house`)
      - traefik.http.routers.archiveteam.entrypoints=web
      - traefik.http.services.archiveteam.loadbalancer.server.port=8001
      - traefik.http.services.archiveteam.loadbalancer.healthcheck.port=8001
      - traefik.http.services.archiveteam.loadbalancer.healthcheck.path=/
      - flame.type=application # "app" works too
      - flame.name=ArchiveTeam
      - flame.url=http://archiveteam.viewpoint.house
      - homepage.group=Media
      - homepage.name=Archive Team Warrior
      - homepage.href=http://archiveteam.viewpoint.house
      - homepage.description=Archive Team Warrior Node
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
