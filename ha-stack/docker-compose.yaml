version: '3.4'

networks:
  zwave:

volumes:
  influxdb2:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/media/sata_ssd/influxdb2/"
  flame_data:
  uptime-kuma:
  zwave-config:
    name: zwave-config

  pihole_etc:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/pihole/etc/"
  pihole_dnsmasq:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/pihole/dnsmasq/"

  whisper:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/whisper/"
  piper:
    driver: local
    driver_opts:
      type: nfs4
      o: addr=172.24.32.5,rw
      device: ":/srv/nfs4/docker_nfs/piper"
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # network_mode: "host"
    ports:
     - "172.24.32.13:53:53/tcp"
     - "172.24.32.13:53:53/udp"
     # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
     - "84:80/tcp"
    environment:
      TZ: 'Europe/London'
      DNSMASQ_LISTENING: 'all'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - 'pihole_etc:/etc/pihole'
      - 'pihole_dnsmasq:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - CAP_NET_BIND_SERVICE
    #   - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  flame:
    image: pawelmalak/flame
    container_name: flame
    restart: unless-stopped
    volumes:
      - flame_data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "82:5005"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flame.rule=Host(`viewpoint.house`)"
      - "traefik.http.routers.flame.entrypoints=web"
      - com.centurylinklabs.watchtower.enable=true

  home-assistant:
    image: homeassistant/home-assistant:latest
    container_name: home-assistant
    depends_on:
      - deconz
      - eclipse-mosquitto
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ha.rule=Host(`ha.viewpoint.house`)"
      - "traefik.http.routers.ha.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Home Assistant
      - flame.url=http://viewpoint.house:8123
      - flame.icon=home-assistant # Optional, default is "docker"
      # - flame.icon=custom to make changes in app. ie: custom icon upload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:8123"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    network_mode: "host"
    environment:
      - PUID=200
      - PGID=200
    devices:
      # - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WRPEJT-if00-port0:/dev/ttyUSB0
      - /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0:/dev/zwave
    #ports:
    #  - 80:8300
    #  - 8123:8123
    #  - 8300:8300
    volumes:
      - /docker/home-assistant/config:/config
      - /media/store/cctv/frigate:/media/frigate_cctv
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  whisper:
    container_name: whisper
    #  command: --model medium --language nl
    command: --model medium-int8 --language en-gb
    image: rhasspy/wyoming-whisper
    # network_mode: host
    volumes:
      - whisper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    ports:
      - 10300:10300
    labels:
      - com.centurylinklabs.watchtower.enable=true

  piper:
    container_name: piper
    image: rhasspy/wyoming-piper
    #  command: --voice nl-nathalie-x-low
    command: --voice en-gb-southern_english_female-low
    # network_mode: host
    volumes:
      - piper:/data
    environment:
      - TZ=Europe/London
    restart: unless-stopped
    ports:
      - 10200:10200
    labels:
      - com.centurylinklabs.watchtower.enable=true

  esphome:
    image: esphome/esphome:latest
    container_name: esphome
    network_mode: host
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.esphome.rule=Host(`esphome.viewpoint.house`)"
      - "traefik.http.routers.esphome.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=ESPHome
      - flame.url=http://viewpoint.house:6052
      - flame.icon=chip
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:6052"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /docker/home-assistant/config/esphome:/config
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  deconz:
    image: marthoc/deconz:latest
    container_name: deconz
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:8100/pwa/login.html"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    network_mode: host
    #ports:
    #  - 8100:8100
    #  - 8143:8143
    #  - 1900:1900
    #  - 5900:5900
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deconz.rule=Host(`deconz.viewpoint.house`)"
      - "traefik.http.routers.deconz.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=deconz
      - flame.url=http://viewpoint.house:8100
      - flame.icon=lightbulb-outline
    volumes:
      - /docker/deCONZ/config:/root/.local/share/dresden-elektronik/deCONZ
      - /docker/deCONZ/otau:/root/otau/
    devices:
      - /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DO00KFKX-if00-port0:/dev/ttyUSB0
    environment:
      - DECONZ_WEB_PORT=8100
      - DECONZ_WS_PORT=8143
      - DEBUG_INFO=1
      - DEBUG_APS=0
      - DEBUG_ZCL=0
      - DEBUG_ZDP=0
      - DEBUG_OTAU=1
      - DECONZ_VNC_MODE=1
      - DECONZ_VNC_PASSWORD=${DECONZ_VNC_PASSWORD}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: unless-stopped
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=mysupersecretkey
      # Uncomment if you want logs time and dates to match your timezone instead of UTC
      # Available at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      #- TZ=America/New_York
    networks:
      - zwave
    devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      - '/dev/serial/by-id/insert_stick_reference_here:/dev/zwave'
    volumes:
      - zwave-config:/usr/src/app/store
    ports:
      - '8091:8091' # port for web interface
      - '3000:3000' # port for Z-Wave JS websocket server
  facebox:
    image: machinebox/facebox_noavx
    container_name: facebox
    restart: unless-stopped
    ports:
      - 8080:8080
    labels:
      - flame.type=application # "app" works too
      - flame.name=Facebox
      - flame.url=http://viewpoint.house:8080
    environment:
      - MB_KEY=${MB_KEY}
      - MB_FACEBOX_DISABLE_RECOGNITION=false
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  eclipse-mosquitto:
    image: eclipse-mosquitto:latest
    container_name: eclipse-mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 9001:9001
    labels:
      - flame.type=application # "app" works too
      - flame.name=Eclipse Mosquitto
      - flame.url=http://viewpoint.house:9001
      - flame.icon=envelope-outline
    volumes:
        - /docker/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
        - /docker/mosquitto/data:/mosquitto/data
        - /docker/mosquitto/log:/mosquitto/log
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  nodered:
    restart: unless-stopped
    image: nodered/node-red:latest
    container_name: node-red
    ports:
      - 1880:1880
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodered.rule=Host(`nodered.viewpoint.house`)"
      - "traefik.http.routers.nodered.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Node-Red
      - flame.url=http://viewpoint.house:1880
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:1880"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      TZ: Europe/London
    volumes:
      - /docker/node-red/data:/data
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  frigate:
    container_name: frigate
    privileged: true # this may not be necessary for all setups
    restart: unless-stopped
    depends_on:
      - eclipse-mosquitto
    image: blakeblackshear/frigate:stable-amd64
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/dri/card0 # for intel hwaccel, needs to be updated for your hardware
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/frigate/config/config.yml:/config/config.yml:ro
      - /media/store/cctv/frigate:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      - "4999:5000"
      - "1935:1935" # RTMP feeds
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frigate.rule=Host(`cctv.viewpoint.house`)"
      - "traefik.http.routers.frigate.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Frigate
      - flame.url=http://viewpoint.house:4999
      - flame.url=cctv
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"
    environment:
      FRIGATE_RTSP_PASSWORD: "password"

  double-take:
    container_name: double-take
    image: jakowenko/double-take
    restart: unless-stopped
    depends_on:
      - eclipse-mosquitto
      - frigate
    volumes:
      - /docker/double-take/storage:/.storage
    ports:
      - 3001:3000
    labels:
      - flame.type=application # "app" works too
      - flame.name=Double Take
      - flame.url=http://viewpoint.house:3001
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://72.24.32.13:12201"
        tag: "{{.Name}}"

  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - uptime-kuma:/app/data
    ports:
      - 3002:3001
    # network_mode: "host"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime.rule=Host(`uptime.viewpoint.house`)"
      - "traefik.http.routers.uptime.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Uptime Kuma
      - flame.url=http://viewpoint.house:3002
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://72.24.32.13:12201"
        tag: "{{.Name}}"
  unifi-controller:
    image: lscr.io/linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - /docker/unifi-controller:/config
    ports:
      - 8444:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      #- 1900:1900/udp #optional
      #- 8843:8843 #optional
      #- 8880:8880 #optional
      #- 6789:6789 #optional
      - 5514:5514/udp #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi-controller.rule=Host(`unifi.viewpoint.house`)"
      - "traefik.http.routers.unifi-controller.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Unifi Controller
      - flame.url=https://viewpoint.house:8444
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    # networks:
    #   - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.viewpoint.house`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Grafana
      - flame.url=http://viewpoint.house:3000
      - flame.icon=chart-line
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      #test: ["CMD", "curl", "-f", "http://homeauto.vpn.glasgownet.com:3000/api/health"]
      test: ["CMD", "wget", "--spider", "-tries=1", "--quiet", "http://viewpoint.house:3000/api/health"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      # http://docs.grafana.org/installation/configuration/#using-environment-variables
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,vonage-status-panel,grafana-influxdb-08-datasource,ryantxu-ajax-panel,raintank-worldping-app
      - GF_SERVER_ROOT_URL=http://homeauto.vpn.glasgownet.com
      - GF_SECURITY_ADMIN_PASSWORD=homeauto
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      # - GF_SERVER_ROOT_URL=${DOMAIN_PROTOCOL}://${BASE_DOMAIN}/grafana/
      # - GF_SERVER_DOMAIN=${BASE_DOMAIN}
    ports:
      - 3000:3000
    volumes:
      - /docker/grafana:/var/lib/grafana/
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    volumes:
      # Mount for influxdb data directory
      - /var/lib/influxdb:/var/lib/influxdb
      - influxdb2:/home/influxdb/.influxdbv2
      - influxdb2:/var/lib/influxdb2
      # Mount for influxdb configuration
      - /docker/influxdb/config/:/etc/influxdb/
      - /docker/influxdb/types.db:/usr/share/collectd/types.db
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      - "25826:25826"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.rule=Host(`influxdb.viewpoint.house`)"
      - "traefik.http.routers.influxdb.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=InfluxDB
      - flame.url=http://viewpoint.house:8086
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:8086"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://viewpoint.house:3000"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      # Mount for chronograf database
      - /docker/chronograf/data/:/var/lib/chronograf/
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "8888:8888"
#    depends_on:
#      - influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chronograf.rule=Host(`chronograf.viewpoint.house`)"
      - "traefik.http.routers.chronograf.entrypoints=web"
      - flame.type=application # "app" works too
      - flame.name=Chronograf
      - flame.url=http://viewpoint.house:8888
      - com.centurylinklabs.watchtower.enable=true
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.24.32.13:12201"
        tag: "{{.Name}}"

  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegraf
  #   # links:
  #   #   - influxdb
  #   ports:
  #     - "8094:8094"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/run/utmp:/var/run/utmp:ro
  #     - /docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #   # environment:
  #   #   INPUT_DOCKER_ENABLED: "true"
  #   #   INPUT_LISTENER_ENABLED: "true"
  #   #   INPUT_CPU_ENABLED: "false"
  #   #   INPUT_DISK_ENABLED: "false"
  #   #   # DISK_IGNOREFS: '["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]'
  #   #   INPUT_DISKIO_ENABLED: "false"
  #   #   INPUT_KERNEL_ENABLED: "false"
  #   #   INPUT_MEM_ENABLED: "false"
  #   #   INPUT_PROCESS_ENABLED: "false"
  #   #   INPUT_SWAP_ENABLED: "true"
  #   #   INPUT_SYSTEM_ENABLED: "true"
  #   #   INPUT_NETSTAT_ENABLED: "true"
  #   #   INPUT_NET_ENABLED: "false"
  #   #   OUTPUT_INFLUXDB_ENABLED: "true"
  #   #   INFLUXDB_URL: "http://172.24.32.13:8086"
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: "udp://172.24.32.13:12201"
  #       tag: "{{.Name}}"

  Watchtower:
    image: v2tec/watchtower:latest
    command: --cleanup --label-enable --schedule="0 2 * * *"
    container_name: Watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=watchtower@glasgownet.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=systems@glasgownet.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=ooshooM5
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped

  archiveTeamWarrior:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior
    hostname: archiveTeamWarrior
    ports:
      - "8001:8001"
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
